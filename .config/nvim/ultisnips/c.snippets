## MAIN
snippet main "main(..) {..}" b
int main(int *argc, const char *argv[])
{
	${0}

	return 0;
}
endsnippet

snippet mainn "main(void) {..}" b
int main(void)
{
	${0}

	return 0;
}
endsnippet

# include
snippet inc "#include <..>" b
#include <${1:stdio}.h>
endsnippet

## CONDITIONALS
# if else
snippet if "if(..) {..}" b
if (${1:/* condition */}) {
	${0:${VISUAL}}
}
endsnippet

snippet ife "if(..) {..} else {..}" b
if (${1:/* condition */}) {
	${2:${VISUAL}}
} else {
	${0}
}
endsnippet

snippet el "else {..}"
else {
	${0:${VISUAL}}
}
endsnippet

snippet elif "else if(..) {..}"
else if (${1:/* condition */}) {
	${0:${VISUAL}}
}
endsnippet

snippet ifi "(..)? a : b;"
${1:/* condition */} ? ${2:a} : ${3:b};
endsnippet

# switch
snippet switch "switch (..) {..}" b
switch (${1:/* variable */}) {
	case ${2:/* variable case */}:
		${3}
		${4:break;}
	${0:default:}
}
endsnippet

snippet case "case ..: .. break;" b
case ${1:/* variable case */}:
	${2}
	${3:break;}
endsnippet

snippet ret "return ..;" b
return ${0};
endsnippet

## LOOPS
# for
snippet for "for (..;..;..) {..}" b
for (int ${1:i} = 0; $1 < ${2:count}; $1++) {
	${0}
}
endsnippet

# while
snippet wh "while (..) {..}" b
while (${1:true}) {
	${0:${VISUAL}}
}
endsnippet

snippet do "do {..} while (..)" b
do {
	${0:${VISUAL}}
} while (${1:true});
endsnippet

## FUNCTIONS
snippet fun ".. ..(..) {..}" b
${1:void} ${2:name}(${3:/* args */})
{
	${0}
}
endsnippet

snippet fund ".. ..(..);" b
	${1:void} ${2:name}(${3});
endsnippet

# types
snippet td "typedef .. ..;" b
typedef ${1:int} ${2:/* type/name */};
endsnippet

# structs
snippet st "struct .. {..};" b
struct ${1:Name} {
	${0}
};
endsnippet

# printf
snippet pr "printf(..);" b
printf("${1:%s}\n"${2});
endsnippet

snippet fpr "fprintf(stderr,..);" b
fprintf(${1:stderr}, "${2:%s}\n"${3});
endsnippet

snippet prd "printf(%d,..);" b
printf("${1:} = %d\n", $1);
endsnippet

snippet prf "printf(%f,..);" b
printf("${1:} = %f\n", $1);
endsnippet

snippet prx "printf(%..,..);" b
printf("${1:} = %${2}\n", $1);
endsnippet

## MISC
# todo
snippet todo "/* TODO: .. */" b
/* TODO: ${0} */
endsnippet
