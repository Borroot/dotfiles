## MAIN
snippet main "" b
int main(int argc, char **argv)
{
	${0}

	return 0;
}
endsnippet

snippet mainn "" b
int main(void)
{
	${0}

	return 0;
}
endsnippet

# include
snippet inc "" b
#include <${1:stdio}.h>
endsnippet

snippet incc "" b
#include "${1}"
endsnippet

## CONDITIONALS
# if else
snippet if "" b
if (${1:/* condition */}) {
	${0:${VISUAL}}
}
endsnippet

snippet ife "" b
if (${1:/* condition */}) {
	${2:${VISUAL}}
} else {
	${0}
}
endsnippet

snippet el ""
else {
	${0:${VISUAL}}
}
endsnippet

snippet elif ""
else if (${1:/* condition */}) {
	${0:${VISUAL}}
}
endsnippet

snippet ifi ""
${1:/* condition */} ? ${2:a} : ${3:b};
endsnippet

# switch
snippet switch "" b
switch (${1:/* variable */}) {
	case ${2:/* variable case */}:
		${3}
		${4:break;}
	${0:default:}
}
endsnippet

snippet case "" b
case ${1:/* variable case */}:
	${2}
	${3:break;}
endsnippet

snippet ret "" b
return ${0};
endsnippet

## LOOPS
# for
snippet for "" b
for (int ${1:i} = 0; $1 < ${2:count}; $1++) {
	${0}
}
endsnippet

# while
snippet wh "" b
while (${1:true}) {
	${0:${VISUAL}}
}
endsnippet

snippet do "" b
do {
	${0:${VISUAL}}
} while (${1:true});
endsnippet

## FUNCTIONS
snippet fun "" b
${1:void} ${2:name}(${3:/* args */})
{
	${0}
}
endsnippet

snippet fund "" b
${1:void} ${2:name}(${3});
endsnippet

# types
snippet td "" b
typedef ${1:int} ${2:/* type/name */};
endsnippet

# structs
snippet st "" b
struct ${1:Name} {
	${0}
};
endsnippet

# printf
snippet pr
printf("${1:%s}\n"${2});
endsnippet

snippet fpr
fprintf(${1:stderr}, "${2:%s}\n"${3});
endsnippet

snippet prd
printf("${1:} = %d\n", $1);
endsnippet

snippet prf
printf("${1:} = %f\n", $1);
endsnippet

snippet prx
printf("${1:} = %${2}\n", $1);
endsnippet

## MISC
# todo
snippet todo "" b
/* TODO: ${0} */
endsnippet
